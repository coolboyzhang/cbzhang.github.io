{"version":3,"sources":["webpack:///./node_modules/id3-parser/lib/constants/frameTypes.js","webpack:///./node_modules/id3-parser/lib/universal/helpers.js","webpack:///./node_modules/id3-parser/lib/polyfill.js","webpack:///./src/views/Upload.vue?8ef8","webpack:///./src/assets/utils/stringHelper.js","webpack:///./src/components/UploadInfo.vue?406a","webpack:///src/components/UploadInfo.vue","webpack:///./src/components/UploadInfo.vue?c173","webpack:///./src/components/UploadInfo.vue","webpack:///src/views/Upload.vue","webpack:///./src/views/Upload.vue?2d03","webpack:///./src/views/Upload.vue","webpack:///./node_modules/id3-parser/lib/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.search.js","webpack:///./node_modules/id3-parser/lib/utils.js","webpack:///./node_modules/id3-parser/lib/parsers/v2parser.js","webpack:///./src/components/UploadInfo.vue?724e","webpack:///./src/views/Upload.vue?3b20","webpack:///./node_modules/id3-parser/lib/constants/genres.js","webpack:///./node_modules/id3-parser/lib/parsers/v1parser.js","webpack:///./node_modules/id3-parser/lib/constants/imageTypes.js"],"names":["Object","defineProperty","exports","value","FRAME_TYPES","TALB","TBPM","TCOM","TCON","TCOP","TDEN","TDLY","TDOR","TDRC","TDRL","TDTG","TENC","TEXT","TFLT","TIPL","TIT1","TIT2","TIT3","TKEY","TLAN","TLEN","TMCL","TMED","TMOO","TOAL","TOFN","TOLY","TOPE","TOWN","TPE1","TPE2","TPE3","TPE4","TPOS","TPRO","TPUB","TRCK","TRSN","TRSO","TSOA","TSOP","TSOT","TSRC","TSSE","TSST","TXXX","TYER","WCOM","WCOP","WOAF","WOAR","WOAS","WORS","WPAY","WPUB","WAF","WAR","WAS","WCM","WCP","WPB","COMM","USLT","APIC","PIC","IPLS","OWNE","default","FrameTypeValueMap","convertFileToBuffer","file","fulfill","refuse","reader","FileReader","promise","Promise","resolve","reject","onload","Uint8Array","result","onerror","e","readAsArrayBuffer","fetchFileAsBuffer","url","Error","request","XMLHttpRequest","open","responseType","response","send","polyfill","prototype","slice","Array","render","_vm","this","_h","$createElement","_c","_self","upList","length","_e","staticClass","ref","attrs","drag","accept","action","show-file-list","auto-upload","http-request","uploadFun","multiple","_v","staticStyle","width","size","on","click","submit","list","staticRenderFns","u8ToBase64","bytes","a","b","c","d","chunk","base64","encodings","byteLength","byteRemainder","mainLength","i","UploadInfovue_type_template_id_16f52fe2_render","_l","f","key","uid","src","img","$event","changeCover","display","type","id","change","uploadImg","model","callback","$$v","$set","expression","filterable","allow-create","default-first-option","placeholder","t","label","uploading","upload","style","_s","progress","class","className","UploadInfovue_type_template_id_16f52fe2_staticRenderFns","UploadInfovue_type_script_lang_js_","name","props","data","upCount","tags","$store","state","sysTags","selectIndex","methods","index","obj","Storage","saveFile","res","params","album","cover","title","artist","search","createBmob","s","tag","forEach","sysSongs","push","objectId","allSongs","setBmob","sysObjectId","p","num","loaded","total","concat","input","document","getElementById","selectIdex","_this","readAsDataURL","path","files","components_UploadInfovue_type_script_lang_js_","component","componentNormalizer","options","__file","UploadInfo","Uploadvue_type_script_lang_js_","components","$refs","helpers","then","lib","fileInfo","isUp","image","views_Uploadvue_type_script_lang_js_","Upload_component","__webpack_exports__","__assign","assign","n","arguments","hasOwnProperty","call","__rest","indexOf","getOwnPropertySymbols","v1parser_1","__webpack_require__","parseV1Tag","v2parser_1","parseV2Tag","polyfill_1","parse","v1data","v2data","defaultValue","version","_a","v2","v2meta","_b","v1","v1meta","comments","defined","SEARCH","$search","regexp","O","fn","undefined","RegExp","String","toStr","fromCharCode","readBytesToUTF8","maxToRead","Math","min","arr","byte1","byte2","byte3","byte4","codepoint","join","readBytesToUTF16","isBigEndian","offset1","offset2","word1","word2","readBytesToISO8859","readBytesToString","encoding","getEndpointOfBytes","start","checker","skipPaddingZeros","frameTypes_1","genres_1","imageTypes_1","utils_1","V2_MIN_LENGTH","parseV2Data","parseV2Header","flags","unsync","headerSize","xheader","calcTagSize","tagSize","parseV2Frames","identity","flagByte","major","minor","revision","experimental","calcFrameSize","position","frame","parseFrame","header","variableStart","variableLength","description","handledTCON","match","map","v","genre","parseInt","isNaN","language","mime","pricePayed","dateOfPurch","seller","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_UploadInfo_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Upload_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","V1_MIN_LENGTH","parseV1Data","flag","reWhiteSpace","replace","year","track"],"mappings":"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CA,OACA,OACA,QACA,aACA,mBACA,oBACA,SACA,SACA,WACA,oBACA,aACA,WACA,YACA,QACA,gBACA,SACA,OACA,cACA,SACA,gBACA,aACA,SACA,kBACA,UACA,WACA,cACA,OACA,YACA,UACA,QACA,SACA,YACA,YACA,QACA,QACA,UACA,cACA,YACA,OACA,YACA,gBACA,QACA,eACA,QACA,QACA,UACA,SACA,YACA,aACA,cACA,mBACA,mBACA,iBACA,YACA,WACA,SACA,iBACA,WACA,SACA,SACA,UACA,QACA,gBACA,SACA,WACA,aACA,SACA,cACA,SACA,WACA,OACA,QACA,QACA,WACA,SACA,eACA,gBACA,YACA,OACA,YACA,YACA,aACA,aACA,aACA,MACA,cACA,aACA,WACA,SACA,QACA,UACA,YACA,aACA,OACA,wBACA,cACA,cACA,YACA,yBACA,iBACA,WACA,QACA,eACA,QACA,OACA,WACA,wECtJAxE,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAAA8S,EAAArD,EAAA,QACAuD,EAAAvD,EAAA,QACA8F,EAAA,IAaA,SAAAC,EAAArN,GACA,IAAAA,KAAAvB,OAAA2O,EACA,SAEApN,IAAAjC,MAAAiC,EAAAvB,OAAA2O,GACA,IAAAlK,GACA6E,SACA2D,MAAA,EACAC,MAAA,IAGA2B,EAAAzC,EAAA3B,gBAAAlJ,EAAA,GACA,WAAAsN,EACA,SAGA,IAAAC,EAAA,oBAeA,OAdArK,EAAAc,MAAA6G,EAAA3B,gBAAAlJ,EAAAjC,MAAA,OAAAyP,QAAAD,EAAA,IACArK,EAAAe,OAAA4G,EAAA3B,gBAAAlJ,EAAAjC,MAAA,QAAAyP,QAAAD,EAAA,IACArK,EAAAY,MAAA+G,EAAA3B,gBAAAlJ,EAAAjC,MAAA,QAAAyP,QAAAD,EAAA,IACArK,EAAAuK,KAAA5C,EAAA3B,gBAAAlJ,EAAAjC,MAAA,OAAAyP,QAAAD,EAAA,IAEA,IAAAvN,EAAA,MACAkD,EAAAoF,SAAAuC,EAAA3B,gBAAAlJ,EAAAjC,MAAA,QAAAyP,QAAAD,EAAA,IACArK,EAAA6E,QAAA4D,MAAA,EACAzI,EAAAwK,MAAA1N,EAAA,MAGAkD,EAAAoF,SAAAuC,EAAA3B,gBAAAlJ,EAAAjC,MAAA,QAAAyP,QAAAD,EAAA,IAEArK,EAAAwJ,MAAA/B,EAAAzO,QAAA8D,EAAA,UACAkD,EAEAtL,EAAAsE,QAAAmR,qCCjDA3V,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9CD,EAAAsE,SACA,QACA,YACA,OACA,cACA,aACA,UACA,QACA,cACA,SACA,YACA,OACA,WACA,kBACA,qBACA,mBACA,qBACA,SACA,OACA,eACA,YACA","file":"music/js/chunk-1925.11c4dd5e.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FRAME_TYPES = {\n    /*\n     * Textual frames\n     */\n    TALB: 'album',\n    TBPM: 'bpm',\n    TCOM: 'composer',\n    TCON: 'genre',\n    TCOP: 'copyright',\n    TDEN: 'encoding-time',\n    TDLY: 'playlist-delay',\n    TDOR: 'original-release-time',\n    TDRC: 'recording-time',\n    TDRL: 'release-time',\n    TDTG: 'tagging-time',\n    TENC: 'encoder',\n    TEXT: 'writer',\n    TFLT: 'file-type',\n    TIPL: 'involved-people',\n    TIT1: 'content-group',\n    TIT2: 'title',\n    TIT3: 'subtitle',\n    TKEY: 'initial-key',\n    TLAN: 'language',\n    TLEN: 'length',\n    TMCL: 'credits',\n    TMED: 'media-type',\n    TMOO: 'mood',\n    TOAL: 'original-album',\n    TOFN: 'original-filename',\n    TOLY: 'original-writer',\n    TOPE: 'original-artist',\n    TOWN: 'owner',\n    TPE1: 'artist',\n    TPE2: 'band',\n    TPE3: 'conductor',\n    TPE4: 'remixer',\n    TPOS: 'set-part',\n    TPRO: 'produced-notice',\n    TPUB: 'publisher',\n    TRCK: 'track',\n    TRSN: 'radio-name',\n    TRSO: 'radio-owner',\n    TSOA: 'album-sort',\n    TSOP: 'performer-sort',\n    TSOT: 'title-sort',\n    TSRC: 'isrc',\n    TSSE: 'encoder-settings',\n    TSST: 'set-subtitle',\n    TXXX: 'user-defined-text-information',\n    TYER: 'year',\n    /*\n     * URL frames\n     */\n    WCOM: 'url-commercial',\n    WCOP: 'url-legal',\n    WOAF: 'url-file',\n    WOAR: 'url-artist',\n    WOAS: 'url-source',\n    WORS: 'url-radio',\n    WPAY: 'url-payment',\n    WPUB: 'url-publisher',\n    /*\n     * URL frames (<=2.2)\n     */\n    WAF: 'url-file',\n    WAR: 'url-artist',\n    WAS: 'url-source',\n    WCM: 'url-commercial',\n    WCP: 'url-copyright',\n    WPB: 'url-publisher',\n    /*\n     * Comment frame\n     */\n    COMM: 'comments',\n    USLT: 'lyrics',\n    /*\n     * Image frame\n     */\n    APIC: 'image',\n    PIC: 'image',\n    /**\n     * User/owner/involved people frame\n     */\n    IPLS: 'involved-people-list',\n    OWNE: 'ownership',\n};\nexports.default = FRAME_TYPES;\n// Frame type to value map.\nexports.FrameTypeValueMap = {\n    TXXX: 'array',\n    COMM: 'array',\n    USLT: 'array',\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction convertFileToBuffer(file) {\n    var reader = new FileReader();\n    var fulfill;\n    var refuse;\n    var promise = new Promise(function (resolve, reject) {\n        fulfill = resolve;\n        refuse = reject;\n    });\n    reader.onload = function () { return fulfill(new Uint8Array(reader.result)); };\n    reader.onerror = function (e) { return refuse(e); };\n    reader.readAsArrayBuffer(file);\n    return promise;\n}\nexports.convertFileToBuffer = convertFileToBuffer;\nfunction fetchFileAsBuffer(url) {\n    if (!url) {\n        throw new Error('Argument should be valid url string.');\n    }\n    var fulfill;\n    var refuse;\n    var promise = new Promise(function (resolve, reject) {\n        fulfill = resolve;\n        refuse = reject;\n    });\n    var request = new XMLHttpRequest();\n    request.open('GET', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function () {\n        if (request.response) {\n            fulfill(new Uint8Array(request.response));\n        }\n        else {\n            refuse('Empty response or other exceptions.');\n        }\n    };\n    request.onerror = function (e) { return refuse(e); };\n    request.send();\n    return promise;\n}\nexports.fetchFileAsBuffer = fetchFileAsBuffer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction polyfill() {\n    // https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.slice\n    if (typeof Uint8Array === 'function' && !Uint8Array.prototype.slice) {\n        Object.defineProperty(Uint8Array.prototype, 'slice', {\n            value: Array.prototype.slice,\n        });\n    }\n}\nexports.default = polyfill;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(!_vm.upList.length)?_c('div',{staticClass:\"text-center\"},[_c('el-upload',{ref:\"upload\",attrs:{\"drag\":\"\",\"accept\":\".mp3, .m4a\",\"action\":\"\",\"show-file-list\":\"\",\"auto-upload\":false,\"http-request\":_vm.uploadFun,\"multiple\":\"\"}},[_c('i',{staticClass:\"el-icon-upload\"}),_c('div',{staticClass:\"el-upload__text\"},[_vm._v(\"将文件拖到此处，或\"),_c('em',[_vm._v(\"点击上传\")])])]),_c('el-button',{staticClass:\"mt_10\",staticStyle:{\"width\":\"1200px\"},attrs:{\"size\":\"large\"},on:{\"click\":_vm.submit}},[_vm._v(\"就这些\")])],1):_vm._e(),_c('UploadInfo',{attrs:{\"list\":_vm.upList}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\n* 从浏览器url的search里获取query值\n*\n* @params search: url的search（ 包括 '?' ）, 必填\n* @params key: 想要筛选得到的值， 选填（如果未填，返回一个包含所有query信息的object）\n*\n* */\nexport function getQueryFromUrl(key, search = window.location.hash) {\n  try {\n    const sArr = search.split('?');\n    let s = '';\n    if (sArr.length > 1) {\n      s = sArr[1];\n    } else {\n      return key ? undefined : {};\n    }\n    const querys = s.split('&');\n    const result = {};\n    querys.forEach((item) => {\n      const temp = item.split('=');\n      result[temp[0]] = decodeURI(temp[1]);\n    });\n    return key ? result[key] : result;\n  } catch (err) {\n    // 除去search为空等异常\n    console.log(err);\n    return key ? '' : {};\n  }\n}\n\nexport function changeUrlQuery(obj) {\n  const query = getQueryFromUrl();\n  const url = window.location.hash.split('?')[0];\n\n  const newQuery = {...query, ...obj};\n  let queryArr = [];\n  Object.keys(newQuery).forEach((key) => {\n    if (newQuery[key] !== undefined && newQuery[key] !== '') {\n      queryArr.push(`${key}=${newQuery[key]}`);\n    }\n  });\n  window.location = queryArr.length > 0 ? `${url}?${queryArr.join('&')}` : url;\n}\n\n/*\n* 将长的字符串切割成短的，以 ...结尾\n* */\nexport function shortString(str, length = 20) {\n  return str.length > length ? `${str.substr(0, length - 3)}...` : str;\n}\n\nexport function u8ToBase64( bytes ) {\n  var base64 = '';\n  var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  var byteLength = bytes.byteLength;\n  var byteRemainder = byteLength % 3;\n  var mainLength = byteLength - byteRemainder;\n  var a, b, c, d;\n  var chunk;\n  // Main loop deals with bytes in chunks of 3\n  for (var i = 0; i < mainLength; i = i + 3) {\n    // Combine the three bytes into a single integer\n    chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n    // Use bitmasks to extract 6-bit segments from the triplet\n    a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n    b = (chunk & 258048) >> 12; // 258048 = (2^6 - 1) << 12\n    c = (chunk & 4032) >> 6; // 4032 = (2^6 - 1) << 6\n    d = chunk & 63; // 63 = 2^6 - 1\n    // Convert the raw binary segments to the appropriate ASCII encoding\n    base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\n  }\n  // Deal with the remaining bytes and padding\n  if (byteRemainder == 1) {\n    chunk = bytes[mainLength];\n    a = (chunk & 252) >> 2 // 252 = (2^6 - 1) << 2;\n    // Set the 4 least significant bits to zero\n    b = (chunk & 3) << 4 // 3 = 2^2 - 1;\n    base64 += encodings[a] + encodings[b] + '==';\n  }\n  else if (byteRemainder == 2) {\n    chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\n    a = (chunk & 16128) >> 8 // 16128 = (2^6 - 1) << 8;\n    b = (chunk & 1008) >> 4 // 1008 = (2^6 - 1) << 4;\n    // Set the 2 least significant bits to zero\n    c = (chunk & 15) << 2 // 15 = 2^4 - 1;\n    base64 += encodings[a] + encodings[b] + encodings[c] + '=';\n  }\n  return \"data:image/jpeg;base64,\" + base64;\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"up-file-list\"},_vm._l((_vm.upList),function(f,i){return _c('div',{key:f.uid,staticClass:\"up-file-item\"},[_c('div',{staticClass:\"img-container\"},[(f.img)?_c('img',{staticClass:\"file-img\",attrs:{\"src\":f.img}}):_vm._e(),_c('div',{staticClass:\"img-cover fc_blue\",on:{\"click\":function($event){_vm.changeCover(i)}}},[_vm._v(\"\\n        换个图片\\n        \"),_c('input',{staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"id\":(\"up-cover-\" + i)},on:{\"change\":_vm.uploadImg}})])]),_c('div',{staticClass:\"info-container\"},[_c('div',{staticClass:\"input-line\"},[_vm._v(\"\\n        歌名：\"),_c('el-input',{staticClass:\"input-box\",model:{value:(f.title),callback:function ($$v) {_vm.$set(f, \"title\", $$v)},expression:\"f.title\"}}),_vm._v(\"\\n        歌手：\"),_c('el-input',{staticClass:\"input-box\",model:{value:(f.artist),callback:function ($$v) {_vm.$set(f, \"artist\", $$v)},expression:\"f.artist\"}})],1),_c('div',{staticClass:\"input-line\"},[_vm._v(\"\\n        专辑：\"),_c('el-input',{staticClass:\"input-box\",model:{value:(f.album),callback:function ($$v) {_vm.$set(f, \"album\", $$v)},expression:\"f.album\"}}),_vm._v(\"\\n        搜索：\"),_c('el-input',{staticClass:\"input-box\",model:{value:(f.search),callback:function ($$v) {_vm.$set(f, \"search\", $$v)},expression:\"f.search\"}})],1),_c('div',{staticClass:\"input-line\"},[_vm._v(\"\\n        标签：\\n        \"),_c('el-select',{staticClass:\"input-tag\",attrs:{\"multiple\":\"\",\"filterable\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\",\"placeholder\":\"考虑加下标签呗\"},model:{value:(f.tag),callback:function ($$v) {_vm.$set(f, \"tag\", $$v)},expression:\"f.tag\"}},_vm._l((_vm.tags),function(t){return _c('el-option',{key:t,attrs:{\"label\":t,\"value\":t}})}))],1),(!f.uploading)?_c('el-button',{staticClass:\"up-btn\",on:{\"click\":function($event){_vm.upload(i)}}},[_vm._v(\"上传吧\")]):_vm._e(),(f.uploading)?_c('div',{staticClass:\"up-progress\"},[_c('div',{staticClass:\"up-progress-green\",style:((\"width: \" + (f.progress) + \"%\"))}),_c('div',{staticClass:\"up-progress-num\"},[_vm._v(_vm._s(f.progress)+\"%\")])]):_vm._e(),(f.uploading)?_c('i',{class:f.className}):_vm._e()],1)])}))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"up-file-list\">\n    <div class=\"up-file-item\" v-for=\"(f, i) in upList\" :key=\"f.uid\">\n      <div class=\"img-container\">\n        <img class=\"file-img\" v-if=\"f.img\" :src=\"f.img\">\n        <div class=\"img-cover fc_blue\" @click=\"changeCover(i)\">\n          换个图片\n          <input style=\"display: none;\" type=\"file\" :id=\"`up-cover-${i}`\" @change=\"uploadImg\">\n        </div>\n      </div>\n      <div class=\"info-container\">\n        <div class=\"input-line\">\n          歌名：<el-input class=\"input-box\" v-model=\"f.title\" />\n          歌手：<el-input class=\"input-box\"  v-model=\"f.artist\" />\n        </div>\n        <div class=\"input-line\">\n          专辑：<el-input class=\"input-box\" v-model=\"f.album\" />\n          搜索：<el-input class=\"input-box\" v-model=\"f.search\" />\n        </div>\n        <div class=\"input-line\">\n          标签：\n          <el-select\n            class=\"input-tag\"\n            v-model=\"f.tag\"\n            multiple\n            filterable\n            allow-create\n            default-first-option\n            placeholder=\"考虑加下标签呗\">\n          <el-option\n            v-for=\"t in tags\"\n            :key=\"t\"\n            :label=\"t\"\n            :value=\"t\">\n          </el-option>\n        </el-select>\n        </div>\n        <el-button v-if=\"!f.uploading\" class=\"up-btn\" @click=\"upload(i)\">上传吧</el-button>\n        <div class=\"up-progress\" v-if=\"f.uploading\">\n          <div class=\"up-progress-green\" :style=\"`width: ${f.progress}%`\"></div>\n          <div class=\"up-progress-num\">{{f.progress}}%</div>\n        </div>\n        <i v-if=\"f.uploading\" :class=\"f.className\"></i>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import Storage from '../assets/utils/Storage';\n  import Num from '../assets/utils/num';\n  export default {\n    name: \"uploadInfo\",\n    props: {\n      list: Array,\n    },\n    data() {\n      return {\n        upList: this.list,\n        upCount: 0,\n        tags: this.$store.state.sysTags,\n        selectIndex: 0, // 选择图片的index\n      }\n    },\n    methods: {\n      upload(index) {\n        const state = this.$store.state;\n        const obj = this.upList[index];\n        obj.uploading = true;\n        obj.className = 'icon-result el-icon-loading';\n        // 上传文件\n        Storage.saveFile(obj.file, (res) => {\n          // 上传成功后在 MusicSongs 表里记录音乐信息\n          const params = {\n            url: res.url,\n            album: obj.album,\n            cover: obj.img,\n            title: obj.title,\n            artist: obj.artist,\n            search: obj.search,\n          };\n          Storage.createBmob(\n            'MusicSongs',\n            params,\n            (s) => {\n              obj.tag.forEach((t) => {\n                if (!state.sysSongs[t]) {\n                  state.sysTags.push(t);\n                  state.sysSongs[t] = [];\n                }\n                state.sysSongs[t].push(s.id);\n              });\n              params.objectId = s.id;\n              state.allSongs[s.id] = params;\n              // 更新系统tag\n              Storage.setBmob(\n                'MusicTag',\n                state.sysObjectId,\n                {\n                  tags: state.sysSongs,\n                }\n              );\n              obj.className = 'icon-result el-icon-success'\n            },\n          )\n        }, (p) => {\n          // 上传进度\n          obj.progress = Num(p.loaded / p.total * 100, 2);\n        })\n      },\n      changeCover(i) {\n        const id = `up-cover-${i}`;\n        const input = document.getElementById(id);\n        this.selectIdex = i;\n        input.click();\n      },\n      uploadImg(e) {\n        const reader = new FileReader();\n        reader.readAsDataURL(e.path[0].files[0]);\n        reader.onload = () => this.upList[this.selectIndex].img = reader.result;\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .up-file-list {\n\n    .info-container {\n      min-width: 600px;\n      display: inline-block;\n      vertical-align: top;\n      padding-left: 20px;\n    }\n\n    .up-file-item {\n      margin-top: 20px;\n\n      .img-container {\n        width: 200px;\n        position: relative;\n        display: inline-block;\n\n        .file-img {\n          width: 200px;\n        }\n        \n        &:hover .img-cover {\n          background: rgba(255,255,255,0.7);\n          opacity: 1;\n        }\n        .img-cover {\n          width: 200px;\n          position: absolute;\n          top: 0;\n          left: 0;\n          height: 200px;\n          z-index: 9;\n          cursor: pointer;\n          background: rgba(255,255,255,0);\n          opacity: 0;\n          transition: 0.3s;\n          text-align: center;\n          line-height: 200px;\n        }\n      }\n\n      .up-btn {\n        margin-top: 15px;\n        margin-left: 65px;\n      }\n\n      .input-line {\n        margin-top: 15px;\n\n        .input-tag {\n          margin-left: 5px;\n          width: 583px;\n        }\n\n        .input-box {\n          display: inline-block;\n          width: 250px;\n          margin-left: 10px;\n          margin-right: 20px;\n        }\n      }\n\n      .up-progress {\n        border: 1px solid #eaeaea;\n        display: inline-block;\n        width: 250px;\n        height: 30px;\n        position: relative;\n        margin-left: 58px;\n        margin-top: 20px;\n        border-radius: 5px;\n        overflow: hidden;\n        text-align: center;\n\n        .up-progress-green {\n          position: absolute;\n          top: 0;\n          left: 0;\n          background: #67C23A;\n          height: 30px;\n        }\n        \n        .up-progress-num {\n          text-align: center;\n          color: #666;\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          line-height: 30px;\n        }\n      }\n\n      .icon-result {\n        vertical-align: top;\n        margin-top: 20px;\n        margin-left: 20px;\n        font-size: 20px;\n        line-height: 30px;\n        display: inline-block;\n        color: #67C23A;\n      }\n    }\n  }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UploadInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UploadInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UploadInfo.vue?vue&type=template&id=16f52fe2&\"\nimport script from \"./UploadInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./UploadInfo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./UploadInfo.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"UploadInfo.vue\"\nexport default component.exports","<template>\n  <div>\n    <div class=\"text-center\" v-if=\"!upList.length\">\n      <el-upload\n        ref=\"upload\"\n        drag\n        accept=\".mp3, .m4a\"\n        action=\"\"\n        show-file-list\n        :auto-upload=\"false\"\n        :http-request=\"uploadFun\"\n        multiple>\n        <i class=\"el-icon-upload\"></i>\n        <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n      </el-upload>\n      <el-button size=\"large\" style=\"width: 1200px;\" class=\"mt_10\" @click=\"submit\">就这些</el-button>\n    </div>\n    <UploadInfo :list=\"upList\" />\n  </div>\n</template>\n\n<script>\n  import { parse } from 'id3-parser';\n  import { convertFileToBuffer } from 'id3-parser/lib/universal/helpers';\n  import { u8ToBase64 } from \"../assets/utils/stringHelper\";\n  import UploadInfo from \"@/components/UploadInfo.vue\";\n\n  export default {\n    name: \"Upload\",\n    components: {\n      UploadInfo,\n    },\n    data() {\n      return {\n        img: '',\n        upList: [],\n      }\n    },\n    methods: {\n      submit() {\n        this.$refs.upload.submit();\n      },\n      uploadFun(data) {\n        // Storage.saveFile(data.file, (res) => console.log(res), (data) => console.log(data));\n        // You have a File instance in browser\n        convertFileToBuffer(data.file).then(parse).then(tag => {\n          const fileInfo = {\n            file: data.file,\n            title: tag.title,\n            album: tag.album,\n            artist: tag.artist,\n            isUp: false,\n            progress: 0,\n            uploading: false,\n            tag: [],\n            className: '',\n            search: '',\n          };\n          if (tag.image && tag.image.data) {\n            fileInfo.img = u8ToBase64(tag.image.data);\n          }\n          this.upList.push(fileInfo);\n        });\n      },\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .el-upload {\n    width: 1200px !important;\n    margin: 0 auto;\n\n    .el-upload-dragger {\n      width: 1200px;\n    }\n  }\n  .el-upload-list {\n    width: 1200px;\n    margin: 0 auto;\n  }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Upload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Upload.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Upload.vue?vue&type=template&id=822b80d8&\"\nimport script from \"./Upload.vue?vue&type=script&lang=js&\"\nexport * from \"./Upload.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Upload.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Upload.vue\"\nexport default component.exports","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar v1parser_1 = require(\"./parsers/v1parser\");\nexports.parseV1Tag = v1parser_1.default;\nvar v2parser_1 = require(\"./parsers/v2parser\");\nexports.parseV2Tag = v2parser_1.default;\nvar polyfill_1 = require(\"./polyfill\");\npolyfill_1.default(); // do polyfill.\nfunction parse(bytes) {\n    var v1data = v1parser_1.default(bytes);\n    var v2data = v2parser_1.default(bytes);\n    if (!v2data && !v1data) {\n        return false;\n    }\n    var defaultValue = { version: false };\n    var _a = v2data || defaultValue, v2 = _a.version, v2meta = __rest(_a, [\"version\"]);\n    var _b = v1data || defaultValue, v1 = _b.version, v1meta = __rest(_b, [\"version\"]);\n    var result = __assign({ version: {\n            v1: v1,\n            v2: v2,\n        } }, v1meta, v2meta);\n    /* tslint:disable:no-any */\n    if (v1meta.comments) {\n        result.comments = [{\n                value: v1meta.comments,\n            }].concat((v2meta && v2meta.comments) ? v2meta.comments : []);\n    }\n    /* tslint:enable:no-any */\n    return result;\n}\nexports.parse = parse;\n","// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search) {\n  // 21.1.3.15 String.prototype.search(regexp)\n  return [function search(regexp) {\n    'use strict';\n    var O = defined(this);\n    var fn = regexp == undefined ? undefined : regexp[SEARCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n  }, $search];\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar toStr = String.fromCharCode;\n/**\n * Convert utf8 bytes to string.\n * @description\n * According to utf8 spec, char is encoded to [1,4] byte.\n * 1. 1 byte, 0 - 0x7f, the same as Ascii chars.\n * 2. 2 bytes, 110xxxxx 10xxxxxx.\n * 3. 3 bytes, 1110xxxx 10xxxxxx 10xxxxxx.\n * 4. 4 bytes, 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx.\n * For 2-4 bytes, remove leading 10/110/1110/11110 and get final codepoint.\n * @param bytes Utf8 binary bytes, usually array of numbers.\n * @param maxToRead Max number of bytes to read.\n */\nfunction readBytesToUTF8(bytes, maxToRead) {\n    if (maxToRead == null || maxToRead < 0) {\n        maxToRead = bytes.length;\n    }\n    else {\n        maxToRead = Math.min(maxToRead, bytes.length);\n    }\n    var index = 0;\n    // Process BOM(Byte order mark).\n    if (bytes[0] === 0xEF && bytes[1] === 0xBB && bytes[2] === 0xBF) {\n        index = 3;\n    }\n    var arr = [];\n    // Continue to insert string to arr until processed bytes' length reach max.\n    for (var i = 0; index < maxToRead; i++) {\n        var byte1 = bytes[index++];\n        var byte2 = void 0;\n        var byte3 = void 0;\n        var byte4 = void 0;\n        var codepoint = void 0;\n        // End flag.\n        if (byte1 === 0x00) {\n            break;\n        }\n        else if (byte1 < 0x80) {\n            arr[i] = toStr(byte1);\n        }\n        else if (byte1 >= 0xC2 && byte1 < 0xE0) {\n            byte2 = bytes[index++];\n            arr[i] = toStr(((byte1 & 0x1F) << 6) + (byte2 & 0x3F));\n        }\n        else if (byte1 >= 0xE0 && byte1 < 0xF0) {\n            byte2 = bytes[index++];\n            byte3 = bytes[index++];\n            arr[i] = toStr(((byte1 & 0x0F) << 12) + ((byte2 & 0x3F) << 6) + (byte3 & 0x3F));\n        }\n        else if (byte1 >= 0xF0 && byte1 < 0xF5) {\n            byte2 = bytes[index++];\n            byte3 = bytes[index++];\n            byte4 = bytes[index++];\n            // See <https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae>\n            codepoint = ((byte1 & 0x07) << 18) +\n                ((byte2 & 0x3F) << 12) +\n                ((byte3 & 0x3F) << 6) +\n                (byte4 & 0x3F) - 0x10000;\n            // Invoke String.fromCharCode(H, L) to get correct char.\n            arr[i] = toStr((codepoint >> 10) + 0xD800, (codepoint & 0x3FF) + 0xDC00);\n        }\n    }\n    return arr.join('');\n}\nexports.readBytesToUTF8 = readBytesToUTF8;\n/**\n * Convert utf16 bytes to string.\n * @description\n * Utf16 represents char with one or two 16-bit code units per code point.\n * 1. Range 0 - 0xFFFF (i.e. the BMP), can be represented with one 16-bit.\n * 2. Range 0x10000 - 0x10FFFF (i.e. outside the BMP), can only be encoded using two 16-bit code units.\n *\n * The two 16-bit is called a surrogate pair.\n * - The first code unit of a surrogate pair is always in the range from 0xD800 to 0xDBFF,\n *   and is called a high surrogate or a lead surrogate.\n * - The second code unit of a surrogate pair is always in the range from 0xDC00 to 0xDFFF,\n *   and is called a low surrogate or a trail surrogate.\n *\n * A codepoint `C` greater than 0xFFFF corresponds to a surrogate pair <H, L>:\n * H = Math.floor((C - 0x10000) / 0x400) + 0xD800\n * L = (C - 0x10000) % 0x400 + 0xDC00\n * C = (H - 0xD800) * 0x400 + L - 0xDC00 + 0x10000\n * @param bytes Utf16 binary bytes, usually array of numbers.\n * @param isBigEndian Specify whether utf16 bytes big-endian or little-endian.\n * @param maxToRead Max number of bytes to read.\n */\nfunction readBytesToUTF16(bytes, isBigEndian, maxToRead) {\n    if (maxToRead == null || maxToRead < 0) {\n        maxToRead = bytes.length;\n    }\n    else {\n        maxToRead = Math.min(maxToRead, bytes.length);\n    }\n    var index = 0;\n    var offset1 = 1;\n    var offset2 = 0;\n    // Check BOM and set isBigEndian.\n    if (bytes[0] === 0xFE && bytes[1] === 0xFF) {\n        isBigEndian = true;\n        index = 2;\n    }\n    else if (bytes[0] === 0xFF && bytes[1] === 0xFE) {\n        isBigEndian = false;\n        index = 2;\n    }\n    if (isBigEndian) {\n        offset1 = 0;\n        offset2 = 1;\n    }\n    var arr = [];\n    var byte1;\n    var byte2;\n    var word1;\n    var word2;\n    var byte3;\n    var byte4;\n    for (var i = 0; index < maxToRead; i++) {\n        // Set high/low 8 bit corresponding to LE/BE.\n        byte1 = bytes[index + offset1];\n        byte2 = bytes[index + offset2];\n        // Get first 16 bits' value.\n        word1 = (byte1 << 8) + byte2;\n        index += 2;\n        // If 16 bits are all 0, means end.\n        if (word1 === 0x0000) {\n            break;\n        }\n        else if (byte1 < 0xD8 || byte1 >= 0xE0) {\n            arr[i] = toStr(word1);\n        }\n        else {\n            // Get next 16 bits.\n            byte3 = bytes[index + offset1];\n            byte4 = bytes[index + offset2];\n            word2 = (byte3 << 8) + byte4;\n            index += 2;\n            // Then invoke String.fromCharCode(H, L) to get correct char.\n            arr[i] = toStr(word1, word2);\n        }\n    }\n    return arr.join('');\n}\nexports.readBytesToUTF16 = readBytesToUTF16;\nfunction readBytesToISO8859(bytes, maxToRead) {\n    if (maxToRead == null || maxToRead < 0) {\n        maxToRead = bytes.length;\n    }\n    else {\n        maxToRead = Math.min(maxToRead, bytes.length);\n    }\n    var arr = [];\n    for (var i = 0; i < maxToRead; i++) {\n        arr.push(toStr(bytes[i]));\n    }\n    return arr.join('');\n}\nexports.readBytesToISO8859 = readBytesToISO8859;\n/**\n * Convert bytes to string according to encoding.\n * @param bytes Binary bytes.\n * @param encoding id3v2 tag encoding, always 0/1/2/3.\n * @param maxToRead Max number of bytes to read.\n */\nfunction readBytesToString(bytes, encoding, maxToRead) {\n    if (encoding === 0) {\n        return readBytesToISO8859(bytes, maxToRead);\n    }\n    else if (encoding === 3) {\n        return readBytesToUTF8(bytes, maxToRead);\n    }\n    else if (encoding === 1 || encoding === 2) {\n        return readBytesToUTF16(bytes, undefined, maxToRead);\n    }\n    else {\n        return null;\n    }\n}\nexports.readBytesToString = readBytesToString;\nfunction getEndpointOfBytes(bytes, encoding, start) {\n    if (start === void 0) { start = 0; }\n    // ISO-8859 use $00 as end flag, and\n    // unicode use $00 00 as end flag.\n    var checker = encoding === 0\n        ? function (index) { return bytes[index] === 0; }\n        : function (index) { return (bytes[index] === 0 && bytes[index + 1] === 0); };\n    var i = start;\n    for (; i < bytes.length; i++) {\n        if (checker(i)) {\n            break;\n        }\n    }\n    return i;\n}\nexports.getEndpointOfBytes = getEndpointOfBytes;\nfunction skipPaddingZeros(bytes, start) {\n    for (var i = start;; i++) {\n        if (bytes[i] === 0) {\n            start++;\n        }\n        else {\n            break;\n        }\n    }\n    return start;\n}\nexports.skipPaddingZeros = skipPaddingZeros;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar frameTypes_1 = require(\"../constants/frameTypes\");\nvar genres_1 = require(\"../constants/genres\");\nvar imageTypes_1 = require(\"../constants/imageTypes\");\nvar utils_1 = require(\"../utils\");\nvar V2_MIN_LENGTH = 20; // TAG HEADER(10) + ONE FRAME HEADER(10)\nfunction parseV2Data(bytes) {\n    if (!bytes || bytes.length < V2_MIN_LENGTH) {\n        return false;\n    }\n    var tags = parseV2Header(bytes.slice(0, 10));\n    if (!tags) {\n        return false;\n    }\n    var flags = tags.version.flags;\n    // Currently do not support unsynchronisation\n    if (flags.unsync) {\n        throw new Error('no support for unsynchronisation');\n    }\n    var headerSize = 10;\n    // Increment the header size if an extended header exists.\n    if (flags.xheader) {\n        // Usually extended header size is 6 or 10 bytes\n        headerSize += calcTagSize(bytes.slice(10, 14));\n    }\n    var tagSize = calcTagSize(bytes.slice(6, 10));\n    parseV2Frames(bytes.slice(headerSize, tagSize + headerSize), tags);\n    return tags;\n}\nexports.default = parseV2Data;\n/**\n * Parse ID3v2 tag header.\n * @description\n * A typical ID3v2 tag (header) is like:\n * $49 44 33 yy yy xx zz zz zz zz\n *\n * Where yy is less than $FF, xx is the 'flags' byte and zz is less than $80.\n * @param bytes binary bytes.\n */\nfunction parseV2Header(bytes) {\n    if (!bytes || bytes.length < 10) {\n        return false;\n    }\n    var identity = utils_1.readBytesToUTF8(bytes, 3);\n    if (identity !== 'ID3') {\n        return false;\n    }\n    var flagByte = bytes[5];\n    var version = {\n        major: 2,\n        minor: bytes[3],\n        revision: bytes[4],\n        flags: {\n            unsync: (flagByte & 0x80) !== 0,\n            xheader: (flagByte & 0x40) !== 0,\n            experimental: (flagByte & 0x20) !== 0,\n        },\n    };\n    return { version: version };\n}\n/**\n * Calculate the total tag size, but excluding the header size(10 bytes).\n * @param bytes binary bytes.\n */\nfunction calcTagSize(bytes) {\n    return (bytes[0] & 0x7f) * 0x200000 +\n        (bytes[1] & 0x7f) * 0x4000 +\n        (bytes[2] & 0x7f) * 0x80 +\n        (bytes[3] & 0x7f);\n}\nexports.calcTagSize = calcTagSize;\n/**\n * Calculate frame size (just content size, exclude 10 bytes header size).\n * @param bytes binary bytes.\n */\nfunction calcFrameSize(bytes) {\n    return bytes.length < 4 ? 0 : bytes[0] * 0x1000000 +\n        bytes[1] * 0x10000 +\n        bytes[2] * 0x100 +\n        bytes[3];\n}\nexports.calcFrameSize = calcFrameSize;\nfunction parseV2Frames(bytes, tags) {\n    var position = 0;\n    var version = tags.version;\n    while (position < bytes.length) {\n        var size = calcFrameSize(bytes.slice(position + 4));\n        // the left data would be '\\u0000\\u0000...', just a padding\n        if (size === 0) {\n            break;\n        }\n        // * < v2.3, frame ID is 3 chars, size is 3 bytes making a total size of 6 bytes\n        // * >= v2.3, frame ID is 4 chars, size is 4 bytes, flags are 2 bytes, total 10 bytes\n        var slice = bytes.slice(position, position + 10 + size);\n        if (!slice.length) {\n            break;\n        }\n        var frame = parseFrame(slice, version.minor, size);\n        if (frame.tag) {\n            if (frameTypes_1.FrameTypeValueMap[frame.id] === 'array') {\n                if (tags[frame.tag]) {\n                    tags[frame.tag].push(frame.value);\n                }\n                else {\n                    tags[frame.tag] = [frame.value];\n                }\n            }\n            else {\n                tags[frame.tag] = frame.value;\n            }\n        }\n        position += slice.length;\n    }\n}\n/**\n * Parse id3 frame.\n * @description\n * Declared ID3v2 frames are of different types:\n * 1. Unique file identifier\n * 2. Text information frames\n * 3. ...\n *\n * For frames that allow different types of text encoding, the first byte after header (bytes[10])\n * represents encoding. Its value is of:\n * 1. 00 <---> ISO-8859-1 (ASCII), default encoding, represented as <text string>/<full text string>\n * 2. 01 <---> UCS-2 encoded Unicode with BOM.\n * 3. 02 <---> UTF-16BE encoded Unicode without BOM.\n * 4. 03 <---> UTF-8 encoded Unicode.\n *\n * And 2-4 represented as <text string according to encoding>/<full text string according to encoding>\n * @param bytes Binary bytes.\n * @param minor Minor version, 2/3/4\n * @param size Frame size.\n */\nfunction parseFrame(bytes, minor, size) {\n    var result = {\n        id: null,\n        tag: null,\n        value: null,\n    };\n    var header = {\n        id: utils_1.readBytesToUTF8(bytes, 4),\n        type: null,\n        size: size,\n        flags: [\n            bytes[8],\n            bytes[9],\n        ],\n    };\n    header.type = header.id[0];\n    result.id = header.id;\n    if (minor === 4) {\n        // TODO: parse v2.4 frame\n    }\n    // No support for compressed, unsychronised, etc frames\n    if (header.flags[1] !== 0) {\n        return result;\n    }\n    if (!(header.id in frameTypes_1.default)) {\n        return result;\n    }\n    result.tag = frameTypes_1.default[header.id];\n    var encoding = 0;\n    var variableStart = 0;\n    var variableLength = 0;\n    var i = 0;\n    /**\n     * Text information frames, structure is:\n     * <Header for 'Text information frame', ID: \"T000\" - \"TZZZ\", excluding \"TXXX\">\n     * Text encoding    $xx\n     * Information    <text string according to encoding>\n     */\n    if (header.type === 'T') {\n        encoding = bytes[10];\n        // If is User defined text information frame (TXXX), then we should handle specially.\n        // <Header for 'User defined text information frame', ID: \"TXXX\" >\n        // Text encoding    $xx\n        // Description < text string according to encoding > $00(00)\n        // Value < text string according to encoding >\n        if (header.id === 'TXXX') {\n            variableStart = 11;\n            variableLength = utils_1.getEndpointOfBytes(bytes, encoding, variableStart) - variableStart;\n            var value = {\n                description: utils_1.readBytesToString(bytes.slice(variableStart), encoding, variableLength),\n                value: '',\n            };\n            variableStart += variableLength + 1;\n            variableStart = utils_1.skipPaddingZeros(bytes, variableStart);\n            value.value = utils_1.readBytesToString(bytes.slice(variableStart), encoding);\n            result.value = value;\n        }\n        else {\n            result.value = utils_1.readBytesToString(bytes.slice(11), encoding);\n            // Specially handle the 'Content type'.\n            if (header.id === 'TCON' && result.value !== null) {\n                if (result.value[0] === '(') {\n                    var handledTCON = result.value.match(/\\(\\d+\\)/g);\n                    if (handledTCON) {\n                        result.value = handledTCON.map(function (v) { return genres_1.default[+v.slice(1, -1)]; }).join(',');\n                    }\n                }\n                else {\n                    var genre = parseInt(result.value, 10);\n                    if (!isNaN(genre)) {\n                        result.value = genres_1.default[genre];\n                    }\n                }\n            }\n        }\n    }\n    else if (header.type === 'W') {\n        // User defined URL link frame\n        if (header.id === 'WXXX' && bytes[10] === 0) {\n            result.value = utils_1.readBytesToISO8859(bytes.slice(11));\n        }\n        else {\n            result.value = utils_1.readBytesToISO8859(bytes.slice(10));\n        }\n    }\n    else if (header.id === 'COMM' || header.id === 'USLT') {\n        encoding = bytes[10];\n        variableStart = 14;\n        variableLength = 0;\n        var language = utils_1.readBytesToISO8859(bytes.slice(11), 3);\n        variableLength = utils_1.getEndpointOfBytes(bytes, encoding, variableStart) - variableStart;\n        var description = utils_1.readBytesToString(bytes.slice(variableStart), encoding, variableLength);\n        variableStart = utils_1.skipPaddingZeros(bytes, variableStart + variableLength + 1);\n        result.value = {\n            language: language,\n            description: description,\n            value: utils_1.readBytesToString(bytes.slice(variableStart), encoding),\n        };\n    }\n    else if (header.id === 'APIC') {\n        encoding = bytes[10];\n        var image = {\n            type: null,\n            mime: null,\n            description: null,\n            data: null,\n        };\n        variableStart = 11;\n        // MIME is always encoded as ISO-8859, So always pass 0 to encoding argument.\n        variableLength = utils_1.getEndpointOfBytes(bytes, 0, variableStart) - variableStart;\n        image.mime = utils_1.readBytesToString(bytes.slice(variableStart), 0, variableLength);\n        image.type = imageTypes_1.default[bytes[variableStart + variableLength + 1]] || 'other';\n        // Skip $00 and $xx(Picture type).\n        variableStart += variableLength + 2;\n        variableLength = 0;\n        for (i = variableStart;; i++) {\n            if (bytes[i] === 0) {\n                variableLength = i - variableStart;\n                break;\n            }\n        }\n        image.description = variableLength === 0\n            ? null\n            : utils_1.readBytesToString(bytes.slice(variableStart), encoding, variableLength);\n        // check $00 at start of the image binary data\n        variableStart = utils_1.skipPaddingZeros(bytes, variableStart + variableLength + 1);\n        image.data = bytes.slice(variableStart);\n        result.value = image;\n    }\n    else if (header.id === 'IPLS') {\n        encoding = bytes[10];\n        result.value = utils_1.readBytesToString(bytes.slice(11), encoding);\n    }\n    else if (header.id === 'OWNE') {\n        encoding = bytes[10];\n        variableStart = 11;\n        variableLength = utils_1.getEndpointOfBytes(bytes, encoding, variableStart);\n        var pricePayed = utils_1.readBytesToISO8859(bytes.slice(variableStart), variableLength);\n        variableStart += variableLength + 1;\n        var dateOfPurch = utils_1.readBytesToISO8859(bytes.slice(variableStart), 8);\n        variableStart += 8;\n        result.value = {\n            pricePayed: pricePayed,\n            dateOfPurch: dateOfPurch,\n            seller: utils_1.readBytesToString(bytes.slice(variableStart), encoding),\n        };\n    }\n    else {\n        // Do nothing to other frames.\n    }\n    return result;\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UploadInfo.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UploadInfo.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Upload.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Upload.vue?vue&type=style&index=0&lang=scss&\"","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = [\n    'Blues',\n    'Classic Rock',\n    'Country',\n    'Dance',\n    'Disco',\n    'Funk',\n    'Grunge',\n    'Hip-Hop',\n    'Jazz',\n    'Metal',\n    'New Age',\n    'Oldies',\n    'Other',\n    'Pop',\n    'R&B',\n    'Rap',\n    'Reggae',\n    'Rock',\n    'Techno',\n    'Industrial',\n    'Alternative',\n    'Ska',\n    'Death Metal',\n    'Pranks',\n    'Soundtrack',\n    'Euro-Techno',\n    'Ambient',\n    'Trip-Hop',\n    'Vocal',\n    'Jazz+Funk',\n    'Fusion',\n    'Trance',\n    'Classical',\n    'Instrumental',\n    'Acid',\n    'House',\n    'Game',\n    'Sound Clip',\n    'Gospel',\n    'Noise',\n    'AlternRock',\n    'Bass',\n    'Soul',\n    'Punk',\n    'Space',\n    'Meditative',\n    'Instrumental Pop',\n    'Instrumental Rock',\n    'Ethnic',\n    'Gothic',\n    'Darkwave',\n    'Techno-Industrial',\n    'Electronic',\n    'Pop-Folk',\n    'Eurodance',\n    'Dream',\n    'Southern Rock',\n    'Comedy',\n    'Cult',\n    'Gangsta Rap',\n    'Top 40',\n    'Christian Rap',\n    'Pop / Funk',\n    'Jungle',\n    'Native American',\n    'Cabaret',\n    'New Wave',\n    'Psychedelic',\n    'Rave',\n    'Showtunes',\n    'Trailer',\n    'Lo-Fi',\n    'Tribal',\n    'Acid Punk',\n    'Acid Jazz',\n    'Polka',\n    'Retro',\n    'Musical',\n    'Rock & Roll',\n    'Hard Rock',\n    'Folk',\n    'Folk-Rock',\n    'National Folk',\n    'Swing',\n    'Fast  Fusion',\n    'Bebob',\n    'Latin',\n    'Revival',\n    'Celtic',\n    'Bluegrass',\n    'Avantgarde',\n    'Gothic Rock',\n    'Progressive Rock',\n    'Psychedelic Rock',\n    'Symphonic Rock',\n    'Slow Rock',\n    'Big Band',\n    'Chorus',\n    'Easy Listening',\n    'Acoustic',\n    'Humour',\n    'Speech',\n    'Chanson',\n    'Opera',\n    'Chamber Music',\n    'Sonata',\n    'Symphony',\n    'Booty Bass',\n    'Primus',\n    'Porn Groove',\n    'Satire',\n    'Slow Jam',\n    'Club',\n    'Tango',\n    'Samba',\n    'Folklore',\n    'Ballad',\n    'Power Ballad',\n    'Rhythmic Soul',\n    'Freestyle',\n    'Duet',\n    'Punk Rock',\n    'Drum Solo',\n    'A Cappella',\n    'Euro-House',\n    'Dance Hall',\n    'Goa',\n    'Drum & Bass',\n    'Club-House',\n    'Hardcore',\n    'Terror',\n    'Indie',\n    'BritPop',\n    'Negerpunk',\n    'Polsk Punk',\n    'Beat',\n    'Christian Gangsta Rap',\n    'Heavy Metal',\n    'Black Metal',\n    'Crossover',\n    'Contemporary Christian',\n    'Christian Rock',\n    'Merengue',\n    'Salsa',\n    'Thrash Metal',\n    'Anime',\n    'JPop',\n    'Synthpop',\n    'Rock/Pop',\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar genres_1 = require(\"../constants/genres\");\nvar utils_1 = require(\"../utils\");\nvar V1_MIN_LENGTH = 128;\n/**\n * Parse ID3v1 metadata from binary bytes.\n * @description\n * ID3v1 tag occupies 128 bytes, beginning with the string TAG 128 bytes\n * from the end of the file.\n *\n * And the format is like: header(3) + title(30) + artist(30) +\n * album(30) + year(4) + comment(30) + genre(1).\n *\n * And extended tag is only supported by few programs, so we ignore it.\n * @param bytes binary bytes.\n */\nfunction parseV1Data(bytes) {\n    if (!bytes || bytes.length < V1_MIN_LENGTH) {\n        return false;\n    }\n    bytes = bytes.slice(bytes.length - V1_MIN_LENGTH);\n    var tags = {\n        version: {\n            major: 1,\n            minor: 0,\n        },\n    };\n    var flag = utils_1.readBytesToUTF8(bytes, 3);\n    if (flag !== 'TAG') {\n        return false;\n    }\n    // Strings are either space- or zero-padded. So remove them.\n    var reWhiteSpace = /(^[\\s0]+|[\\s0]+$)/;\n    tags.title = utils_1.readBytesToUTF8(bytes.slice(3), 30).replace(reWhiteSpace, '');\n    tags.artist = utils_1.readBytesToUTF8(bytes.slice(33), 30).replace(reWhiteSpace, '');\n    tags.album = utils_1.readBytesToUTF8(bytes.slice(63), 30).replace(reWhiteSpace, '');\n    tags.year = utils_1.readBytesToUTF8(bytes.slice(93), 4).replace(reWhiteSpace, '');\n    // If there is a zero byte at [125], the comment is 28 bytes and the remaining 2 are [0, trackno]\n    if (bytes[125] === 0) {\n        tags.comments = utils_1.readBytesToUTF8(bytes.slice(97), 28).replace(reWhiteSpace, '');\n        tags.version.minor = 1;\n        tags.track = bytes[126];\n    }\n    else {\n        tags.comments = utils_1.readBytesToUTF8(bytes.slice(97), 30).replace(reWhiteSpace, '');\n    }\n    tags.genre = genres_1.default[bytes[127]] || '';\n    return tags;\n}\nexports.default = parseV1Data;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = [\n    'other',\n    'file-icon',\n    'icon',\n    'cover-front',\n    'cover-back',\n    'leaflet',\n    'media',\n    'artist-lead',\n    'artist',\n    'conductor',\n    'band',\n    'composer',\n    'lyricist-writer',\n    'recording-location',\n    'during-recording',\n    'during-performance',\n    'screen',\n    'fish',\n    'illustration',\n    'logo-band',\n    'logo-publisher',\n];\n"],"sourceRoot":""}